 import java.util.ArrayList;
import java.util.Scanner;

class Book {
    private String title;
    private String author;
    private double price;
    private int quantity;

    public Book(String title, String author, double price, int quantity) {
        this.title = title;
        this.author = author;
        this.price = price;
        this.quantity = quantity;
    }

    // Getters and setters
    public String getTitle() {
        return title;
    }

    public void setTitle(String title) {
        this.title = title;
    }

    public String getAuthor() {
        return author;
    }

    public void setAuthor(String author) {
        this.author = author;
    }

    public double getPrice() {
        return price;
    }
public void setPrice(double price) {
        this.price = price;
    }
public int getQuantity() {
        return quantity;
    }

    public void setQuantity(int quantity) {
        this.quantity = quantity;
    }

    @Override
    public String toString() {
        return "Book{" +
                "title='" + title + '\'' +
                ", author='" + author + '\'' +
                ", price=" + price +
                ", quantity=" + quantity +
                '}';
    }
}
    
public class BookInventorySystem {
    private ArrayList<Book> bookList = new ArrayList<>();
    private Scanner scanner;

    public BookInventorySystem() {
        this.scanner = new Scanner(System.in);
    }

    public void addBook(String title, String author, double price, int quantity) {
        if (title == null || author == null || title.isEmpty() || author.isEmpty() || price <= 0 || quantity <= 0) {
            throw new IllegalArgumentException("Invalid input parameters for adding a book.");
        }
        bookList.add(new Book(title, author, price, quantity));
    }

    public void removeBook(String title) {
        boolean removed = bookList.removeIf(book -> book.getTitle().equals(title));
        if (!removed) {
            throw new IllegalArgumentException("Book with title " + title + " not found.");
        }
    }

    public void updateBook(String title, String newTitle, String author, double price, int quantity) {
        if (newTitle == null || author == null || newTitle.isEmpty() || author.isEmpty() || price <= 0 || quantity <= 0) {
            throw new IllegalArgumentException("Invalid input parameters for updating a book.");
        }
boolean updated = false;
        for (Book book : bookList) {
            if (book.getTitle().equals(title)) {
                book.setTitle(newTitle);
                book.setAuthor(author);
                book.setPrice(price);
                book.setQuantity(quantity);
                updated = true;
                break;
            }
        }
        if (!updated) {
            throw new IllegalArgumentException("Book with title " + title + " not found.");
        }
    }

    public ArrayList<Book> searchByTitle(String title) {
        ArrayList<Book> result = new ArrayList<>();
        for (Book book : bookList) {
            if (book.getTitle().contains(title)) {
                result.add(book);
            }
        }
        return result;
    }

    public ArrayList<Book> searchByAuthor(String author) {
        ArrayList<Book> result = new ArrayList<>();
        for (Book book : bookList) {
            if (book.getAuthor().contains(author)) {
                result.add(book);
            }
        }
        return result;
    }

    public ArrayList<Book> getBookList() {
        return bookList;
    }

    public static void main(String[] args) {
        BookInventorySystem system = new BookInventorySystem();
        Scanner scanner = new Scanner(System.in);

        while (true) {
            System.out.println("Select an option:");
            System.out.println("1. Add a book");
            System.out.println("2. Remove a book");
            System.out.println("3. Update a book");
            System.out.println("4. Search books by title");
            System.out.println("5. Search books by author");
            System.out.println("6. Exit");
            System.out.print("Enter your choice: ");
            int choice = scanner.nextInt();
            scanner.nextLine(); // Consume newline character

            switch (choice) {
                case 1:
                    System.out.print("Enter title: ");
                    String addTitle = scanner.nextLine();
                    System.out.print("Enter author: ");
                    String addAuthor = scanner.nextLine();
                    System.out.print("Enter price: ");
                    double addPrice = scanner.nextDouble();
                    System.out.print("Enter quantity: ");
                    int addQuantity = scanner.nextInt();
                    system.addBook(addTitle, addAuthor, addPrice, addQuantity);
                    break;
                case 2:
                    System.out.print("Enter title to remove: ");
                    String removeTitle = scanner.nextLine();
                    system.removeBook(removeTitle);
                    break;
                case 3:
                    System.out.print("Enter title to update: ");
                    String updateTitle = scanner.nextLine();
                    System.out.print("Enter new title: ");
                    String newTitle = scanner.nextLine();
                    System.out.print("Enter author: ");
                    String updateAuthor = scanner.nextLine();
                    System.out.print("Enter price: ");
                    double updatePrice = scanner.nextDouble();
                    System.out.print("Enter quantity: ");
                    int updateQuantity = scanner.nextInt();
                    system.updateBook(updateTitle, newTitle, updateAuthor, updatePrice, updateQuantity);
                    break;
case 4:
                    System.out.print("Enter title to search: ");
                    String searchTitle = scanner.nextLine();
                    ArrayList<Book> titleSearchResult = system.searchByTitle(searchTitle);
                    if (titleSearchResult.isEmpty()) {
                        System.out.println("No books found with title containing '" + searchTitle + "'.");
                    } else {
                        System.out.println("Books found with title containing '" + searchTitle + "':");
                        for (Book book : titleSearchResult) {
                            System.out.println(book);
                        }
                    }
                    break;
                case 5:
                    System.out.print("Enter author to search: ");
                    String searchAuthor = scanner.nextLine();
                    ArrayList<Book> authorSearchResult = system.searchByAuthor(searchAuthor);
                    if (authorSearchResult.isEmpty()) {
                        System.out.println("No books found with author containing '" + searchAuthor + "'.");
                    } else {
                        System.out.println("Books found with author containing '" + searchAuthor + "':");
                        for (Book book : authorSearchResult) {
                            System.out.println(book);
                        }
                    }
                    break;
                case 6:
                    System.out.println("Exiting...");
                    System.exit(0);
                default:
                    System.out.println("Invalid choice. Please enter a valid option.");
            }
        }
    }
}
